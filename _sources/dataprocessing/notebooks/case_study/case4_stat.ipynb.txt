{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Case Study 4 - Multiple Runs\n",
    "\n",
    "This notebook uses the ```seaborn```, which is not listed as a requirement for this library. Therefore, make sure to install it before running this notebook. To install it, use the following:\n",
    "\n",
    "```console\n",
    "> pip install seaborn\n",
    "```\n",
    "\n",
    "## 0 - Defining Basic Functionalities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "sys.path.append('../../notebooks')\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import uci_dataset as database\n",
    "from matplotlib.pyplot import figure\n",
    "\n",
    "import raimitigations.dataprocessing as dp\n",
    "from notebooks.download import download_datasets\n",
    "import case_study_utils as cs\n",
    "\n",
    "N_EXEC = 20\n",
    "\n",
    "USE_AUC_TH = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_encoders():\n",
    "\teducation_order = [\"Below Secondary\", \"Bachelor's\", \"Master's & above\"]\n",
    "\n",
    "\t# Encode 'education' using ordinal encoding\n",
    "\t#enc_ord = dp.EncoderOrdinal(col_encode=[\"education\"],\n",
    "\t#\t\t\t\t\t\t\tcategories={\"education\":education_order},\n",
    "\t#\t\t\t\t\t\t\tverbose=False\n",
    "\t#\t\t\t\t\t\t)\n",
    "\tenc_ord = dp.EncoderOrdinal(categories={\"education\":education_order},\n",
    "\t\t\t\t\t\t\t\tverbose=False\n",
    "\t\t\t\t\t\t\t)\n",
    "\tenc_ohe = dp.EncoderOHE(drop=False, unknown_err=False, verbose=False)\n",
    "\treturn enc_ord, enc_ohe\n",
    "\n",
    "# -----------------------------------\n",
    "def encode_case4(df):\n",
    "\tenc_ord, enc_ohe = get_encoders()\n",
    "\tenc_ord.fit(df)\n",
    "\tproc_df = enc_ord.transform(df)\n",
    "\n",
    "\t# Encode the remaining categorical columns using One-Hot Encoding\n",
    "\t#enc_ohe.fit(proc_df)\n",
    "\t#proc_df = enc_ohe.transform(proc_df)\n",
    "\treturn proc_df\n",
    "\n",
    "\n",
    "# -----------------------------------\n",
    "def encode_case4_train_test(train_x, test_x):\n",
    "\tenc_ord, enc_ohe = get_encoders()\n",
    "\tenc_ord.fit(train_x)\n",
    "\ttrain_x_enc = enc_ord.transform(train_x)\n",
    "\ttest_x_enc = enc_ord.transform(test_x)\n",
    "\n",
    "\t#enc_ohe.fit(train_x_enc)\n",
    "\t#train_x_enc = enc_ohe.transform(train_x_enc)\n",
    "\t#test_x_enc = enc_ohe.transform(test_x_enc)\n",
    "\treturn train_x_enc, test_x_enc\n",
    "\n",
    "\n",
    "# -----------------------------------\n",
    "def impute_case4(df):\n",
    "\timputer = dp.BasicImputer(\tnumerical={\t'missing_values':np.nan,\n",
    "\t\t\t\t\t\t\t\t\t\t\t'strategy':'constant',\n",
    "\t\t\t\t\t\t\t\t\t\t\t'fill_value':-1},\n",
    "\t\t\t\t\t\t\t\tverbose=False)\n",
    "\timputer.fit(df)\n",
    "\tproc_df = imputer.transform(df)\n",
    "\treturn proc_df\n",
    "\n",
    "\n",
    "# -----------------------------------\n",
    "def impute_case4_train_test(train_x, test_x):\n",
    "\timputer = dp.BasicImputer(\tnumerical={\t'missing_values':np.nan,\n",
    "\t\t\t\t\t\t\t\t\t\t\t'strategy':'constant',\n",
    "\t\t\t\t\t\t\t\t\t\t\t'fill_value':-1},\n",
    "\t\t\t\t\t\t\t\tverbose=False)\n",
    "\timputer.fit(train_x)\n",
    "\ttrain_x_enc = imputer.transform(train_x)\n",
    "\ttest_x_enc = imputer.transform(test_x)\n",
    "\treturn train_x_enc, test_x_enc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def test_base(df, label_col, n_exec, model_name):\n",
    "\tresult_list = []\n",
    "\tproc_df = encode_case4(df)\n",
    "\tproc_df = impute_case4(proc_df)\n",
    "\tfor n in range(n_exec):\n",
    "\t\ttrain_x, test_x, train_y, test_y = dp.split_data(proc_df, label_col, test_size=0.25)\n",
    "\t\tresult = dp.train_model_fetch_results(train_x, train_y, test_x, test_y, model_name, USE_AUC_TH)\n",
    "\t\tresult_list.append(result)\n",
    "\n",
    "\tresult_stat = cs.result_statistics(result_list)\n",
    "\n",
    "\treturn result_stat\n",
    "\n",
    "\n",
    "# -----------------------------------\n",
    "def test_corr(df, label_col, n_exec, model_name):\n",
    "\tresult_list = []\n",
    "\tproc_df = cs.remove_corr_feat(df, label_col)\n",
    "\tproc_df = encode_case4(proc_df)\n",
    "\tproc_df = impute_case4(proc_df)\n",
    "\tfor n in range(n_exec):\n",
    "\t\ttrain_x, test_x, train_y, test_y = dp.split_data(proc_df, label_col, test_size=0.25)\n",
    "\t\tresult = dp.train_model_fetch_results(train_x, train_y, test_x, test_y, model_name, USE_AUC_TH)\n",
    "\t\tresult_list.append(result)\n",
    "\n",
    "\tresult_stat = cs.result_statistics(result_list)\n",
    "\n",
    "\treturn result_stat\n",
    "\n",
    "\n",
    "# -----------------------------------\n",
    "def test_corr_transf(df, label_col, n_exec, scaler_ref, model_name, num_col=None):\n",
    "\tresult_list = []\n",
    "\tproc_df = cs.remove_corr_feat(df, label_col)\n",
    "\tproc_df = encode_case4(proc_df)\n",
    "\tproc_df = impute_case4(proc_df)\n",
    "\tfor n in range(n_exec):\n",
    "\t\ttrain_x, test_x, train_y, test_y = dp.split_data(proc_df, label_col, test_size=0.25)\n",
    "\t\ttrain_x, test_x = cs.transform_num_data(train_x, test_x, scaler_ref, num_col)\n",
    "\t\tresult = dp.train_model_fetch_results(train_x, train_y, test_x, test_y, model_name, USE_AUC_TH)\n",
    "\t\tresult_list.append(result)\n",
    "\n",
    "\tresult_stat = cs.result_statistics(result_list)\n",
    "\n",
    "\treturn result_stat\n",
    "\n",
    "# -----------------------------------\n",
    "def test_smote_transf(df, label_col, n_exec, model_name, rcorr=True, scaler_ref=None, num_col=None, feat_sel_type=None, art_str=None, under=False):\n",
    "\tresult_list = []\n",
    "\tproc_df = df\n",
    "\tif rcorr:\n",
    "\t\tproc_df = cs.remove_corr_feat(proc_df, label_col)\n",
    "\tproc_df = encode_case4(proc_df)\n",
    "\tproc_df = impute_case4(proc_df)\n",
    "\tfor n in range(n_exec):\n",
    "\t\ttrain_x, test_x, train_y, test_y = dp.split_data(proc_df, label_col, test_size=0.25)\n",
    "\t\tif art_str is not None:\n",
    "\t\t\ttrain_x, train_y = cs.artificial_smote(train_x, train_y, art_str, under)\n",
    "\t\tif feat_sel_type is not None:\n",
    "\t\t\ttrain_x, test_x = cs.feature_selection(train_x, train_y, test_x, feat_sel_type)\n",
    "\t\tif scaler_ref is not None:\n",
    "\t\t\ttrain_x, test_x = cs.transform_num_data(train_x, test_x, scaler_ref, num_col)\n",
    "\t\tresult = dp.train_model_fetch_results(train_x, train_y, test_x, test_y, model_name, USE_AUC_TH)\n",
    "\t\tresult_list.append(result)\n",
    "\n",
    "\tresult_stat = cs.result_statistics(result_list)\n",
    "\n",
    "\treturn result_stat\n",
    "\n",
    "\n",
    "\n",
    "# -----------------------------------\n",
    "def test_ctgan_first(df, label_col, n_exec, model_name, rcorr=True, scaler_ref=None, num_col=None, feat_sel_type=None, art_str=None, savefile=None):\n",
    "\tresult_list = []\n",
    "\tproc_df = df\n",
    "\tif rcorr:\n",
    "\t\tproc_df = cs.remove_corr_feat(proc_df, label_col)\n",
    "\tfor n in range(n_exec):\n",
    "\t\ttrain_x, test_x, train_y, test_y = dp.split_data(proc_df, label_col, test_size=0.25)\n",
    "\t\tif art_str is not None:\n",
    "\t\t\ttrain_x, train_y = cs.artificial_ctgan(train_x, train_y, art_str, savefile, epochs=200)\n",
    "\t\ttrain_x, test_x = encode_case4_train_test(train_x, test_x)\n",
    "\t\ttrain_x, test_x = impute_case4_train_test(train_x, test_x)\n",
    "\t\tif feat_sel_type is not None:\n",
    "\t\t\ttrain_x, test_x = cs.feature_selection(train_x, train_y, test_x, feat_sel_type)\n",
    "\t\tif scaler_ref is not None:\n",
    "\t\t\ttrain_x, test_x = cs.transform_num_data(train_x, test_x, scaler_ref, num_col)\n",
    "\t\tresult = dp.train_model_fetch_results(train_x, train_y, test_x, test_y, model_name, USE_AUC_TH)\n",
    "\t\tresult_list.append(result)\n",
    "\n",
    "\tresult_stat = cs.result_statistics(result_list)\n",
    "\n",
    "\treturn result_stat"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1 - Understanding the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>department</th>\n",
       "      <th>region</th>\n",
       "      <th>education</th>\n",
       "      <th>gender</th>\n",
       "      <th>recruitment_channel</th>\n",
       "      <th>no_of_trainings</th>\n",
       "      <th>age</th>\n",
       "      <th>previous_year_rating</th>\n",
       "      <th>length_of_service</th>\n",
       "      <th>KPIs_met &gt;80%</th>\n",
       "      <th>awards_won?</th>\n",
       "      <th>avg_training_score</th>\n",
       "      <th>is_promoted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_7</td>\n",
       "      <td>Master's &amp; above</td>\n",
       "      <td>f</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Operations</td>\n",
       "      <td>region_22</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_19</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_23</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>2</td>\n",
       "      <td>39</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Technology</td>\n",
       "      <td>region_26</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54803</th>\n",
       "      <td>Technology</td>\n",
       "      <td>region_14</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>48</td>\n",
       "      <td>3.0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>78</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54804</th>\n",
       "      <td>Operations</td>\n",
       "      <td>region_27</td>\n",
       "      <td>Master's &amp; above</td>\n",
       "      <td>f</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54805</th>\n",
       "      <td>Analytics</td>\n",
       "      <td>region_1</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54806</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>m</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54807</th>\n",
       "      <td>HR</td>\n",
       "      <td>region_22</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>54808 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              department     region         education gender  \\\n",
       "0      Sales & Marketing   region_7  Master's & above      f   \n",
       "1             Operations  region_22        Bachelor's      m   \n",
       "2      Sales & Marketing  region_19        Bachelor's      m   \n",
       "3      Sales & Marketing  region_23        Bachelor's      m   \n",
       "4             Technology  region_26        Bachelor's      m   \n",
       "...                  ...        ...               ...    ...   \n",
       "54803         Technology  region_14        Bachelor's      m   \n",
       "54804         Operations  region_27  Master's & above      f   \n",
       "54805          Analytics   region_1        Bachelor's      m   \n",
       "54806  Sales & Marketing   region_9               NaN      m   \n",
       "54807                 HR  region_22        Bachelor's      m   \n",
       "\n",
       "      recruitment_channel  no_of_trainings  age  previous_year_rating  \\\n",
       "0                sourcing                1   35                   5.0   \n",
       "1                   other                1   30                   5.0   \n",
       "2                sourcing                1   34                   3.0   \n",
       "3                   other                2   39                   1.0   \n",
       "4                   other                1   45                   3.0   \n",
       "...                   ...              ...  ...                   ...   \n",
       "54803            sourcing                1   48                   3.0   \n",
       "54804               other                1   37                   2.0   \n",
       "54805               other                1   27                   5.0   \n",
       "54806            sourcing                1   29                   1.0   \n",
       "54807               other                1   27                   1.0   \n",
       "\n",
       "       length_of_service  KPIs_met >80%  awards_won?  avg_training_score  \\\n",
       "0                      8              1            0                  49   \n",
       "1                      4              0            0                  60   \n",
       "2                      7              0            0                  50   \n",
       "3                     10              0            0                  50   \n",
       "4                      2              0            0                  73   \n",
       "...                  ...            ...          ...                 ...   \n",
       "54803                 17              0            0                  78   \n",
       "54804                  6              0            0                  56   \n",
       "54805                  3              1            0                  79   \n",
       "54806                  2              0            0                  45   \n",
       "54807                  5              0            0                  49   \n",
       "\n",
       "       is_promoted  \n",
       "0                0  \n",
       "1                0  \n",
       "2                0  \n",
       "3                0  \n",
       "4                0  \n",
       "...            ...  \n",
       "54803            0  \n",
       "54804            0  \n",
       "54805            0  \n",
       "54806            0  \n",
       "54807            0  \n",
       "\n",
       "[54808 rows x 13 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_dir = '../../../datasets/'\n",
    "download_datasets(data_dir)\n",
    "\n",
    "df =  pd.read_csv(data_dir + 'hr_promotion/train.csv')\n",
    "df.drop(columns=['employee_id'], inplace=True)\n",
    "label_col = \"is_promoted\"\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 54808 entries, 0 to 54807\n",
      "Data columns (total 13 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   department            54808 non-null  object \n",
      " 1   region                54808 non-null  object \n",
      " 2   education             52399 non-null  object \n",
      " 3   gender                54808 non-null  object \n",
      " 4   recruitment_channel   54808 non-null  object \n",
      " 5   no_of_trainings       54808 non-null  int64  \n",
      " 6   age                   54808 non-null  int64  \n",
      " 7   previous_year_rating  50684 non-null  float64\n",
      " 8   length_of_service     54808 non-null  int64  \n",
      " 9   KPIs_met >80%         54808 non-null  int64  \n",
      " 10  awards_won?           54808 non-null  int64  \n",
      " 11  avg_training_score    54808 non-null  int64  \n",
      " 12  is_promoted           54808 non-null  int64  \n",
      "dtypes: float64(1), int64(7), object(5)\n",
      "memory usage: 5.4+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "num_col = ['no_of_trainings', 'age', 'previous_year_rating', 'length_of_service', 'awards_won?', 'avg_training_score']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2 - Efficiency of Different Classes from raimitigations.dataprocessing lib\n",
    "\n",
    "### XGBoost Model\n",
    "\n",
    "#### Data Transformations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "MODEL_NAME = \"xgb\"\n",
    "\n",
    "result_base = test_base(df, label_col, N_EXEC, MODEL_NAME)\n",
    "result_df = cs.add_results_df(None, result_base, \"Baseline\")\n",
    "\n",
    "result_cor = test_corr(df, label_col, N_EXEC, MODEL_NAME)\n",
    "result_df = cs.add_results_df(result_df, result_cor, \"Corr.\")\n",
    "\n",
    "result_tr = test_corr_transf(df, label_col, N_EXEC, dp.DataStandardScaler, MODEL_NAME, num_col)\n",
    "result_df = cs.add_results_df(result_df, result_tr, \"Std.\")\n",
    "\n",
    "result_tr = test_corr_transf(df, label_col, N_EXEC, dp.DataMinMaxScaler, MODEL_NAME, num_col)\n",
    "result_df = cs.add_results_df(result_df, result_tr, \"Min/Max.\")\n",
    "\n",
    "result_tr = test_corr_transf(df, label_col, N_EXEC, dp.DataQuantileTransformer, MODEL_NAME, num_col)\n",
    "result_df = cs.add_results_df(result_df, result_tr, \"Quantile\")\n",
    "\n",
    "result_tr = test_corr_transf(df, label_col, N_EXEC, dp.DataNormalizer, MODEL_NAME, num_col)\n",
    "result_df = cs.add_results_df(result_df, result_tr, \"Normalizer\")\n",
    "\n",
    "result_tr = test_corr_transf(df, label_col, N_EXEC, dp.DataRobustScaler, MODEL_NAME, num_col)\n",
    "result_df = cs.add_results_df(result_df, result_tr, \"Robust\")\n",
    "\n",
    "result_tr = test_corr_transf(df, label_col, N_EXEC, dp.DataPowerTransformer, MODEL_NAME, num_col)\n",
    "result_df = cs.add_results_df(result_df, result_tr, \"Power\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cs.plot_results(result_df, y_lim=[0.6, 0.95])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Feature Selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "MODEL_NAME = \"xgb\"\n",
    "\n",
    "result_base = test_base(df, label_col, N_EXEC, MODEL_NAME)\n",
    "result_df = cs.add_results_df(None, result_base, \"Baseline\")\n",
    "\n",
    "restult_fs = test_smote_transf(df, label_col, N_EXEC, MODEL_NAME, rcorr=False, feat_sel_type='backward')\n",
    "result_df = cs.add_results_df(result_df, restult_fs, \"Seq.Bwd.\")\n",
    "\n",
    "restult_fs = test_smote_transf(df, label_col, N_EXEC, MODEL_NAME, rcorr=False, feat_sel_type='catboost')\n",
    "result_df = cs.add_results_df(result_df, restult_fs, \"CatBoost\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cs.plot_results(result_df, y_lim=[0.6, 0.95])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Artificial Instances - SMOTE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "MODEL_NAME = \"xgb\"\n",
    "\n",
    "result_base = test_base(df, label_col, N_EXEC, MODEL_NAME)\n",
    "result_df = cs.add_results_df(None, result_base, \"Baseline\")\n",
    "\n",
    "restult_fs = test_smote_transf(df, label_col, N_EXEC, MODEL_NAME, rcorr=True, art_str=0.2, under=False)\n",
    "result_df = cs.add_results_df(result_df, restult_fs, \"SM\")\n",
    "\n",
    "restult_fs = test_smote_transf(df, label_col, N_EXEC, MODEL_NAME, rcorr=True, art_str=0.2, under=True)\n",
    "result_df = cs.add_results_df(result_df, restult_fs, \"SM+TK\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cs.plot_results(result_df, y_lim=[0.6, 0.95])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Artificial Instances - CTGAN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/sklearn/mixture/_base.py:277: ConvergenceWarning: Initialization 1 did not converge. Try different init parameters, or increase max_iter, tol or check for degenerate data.\n",
      "  warnings.warn(\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/sklearn/mixture/_base.py:143: ConvergenceWarning: Number of distinct clusters (6) found smaller than n_clusters (10). Possibly due to duplicate points in X.\n",
      "  cluster.KMeans(\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/sklearn/mixture/_base.py:277: ConvergenceWarning: Initialization 1 did not converge. Try different init parameters, or increase max_iter, tol or check for degenerate data.\n",
      "  warnings.warn(\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/sklearn/mixture/_base.py:277: ConvergenceWarning: Initialization 1 did not converge. Try different init parameters, or increase max_iter, tol or check for degenerate data.\n",
      "  warnings.warn(\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/ctgan/data_transformer.py:111: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[column_name] = data[column_name].to_numpy().flatten()\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/ctgan/data_transformer.py:111: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[column_name] = data[column_name].to_numpy().flatten()\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/ctgan/data_transformer.py:111: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[column_name] = data[column_name].to_numpy().flatten()\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/ctgan/data_transformer.py:111: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[column_name] = data[column_name].to_numpy().flatten()\n",
      "/home/mmendonca/anaconda3/envs/rai/lib/python3.9/site-packages/ctgan/data_transformer.py:111: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[column_name] = data[column_name].to_numpy().flatten()\n"
     ]
    }
   ],
   "source": [
    "MODEL_NAME = \"xgb\"\n",
    "\n",
    "result_base = test_base(df, label_col, N_EXEC, MODEL_NAME)\n",
    "result_df = cs.add_results_df(None, result_base, \"Baseline\")\n",
    "\n",
    "restult_fs = test_ctgan_first(df, label_col, N_EXEC, MODEL_NAME, rcorr=True, feat_sel_type=None, art_str=0.2, savefile=\"4_1.pkl\")\n",
    "result_df = cs.add_results_df(result_df, restult_fs, \"CTGAN 0.2\")\n",
    "\n",
    "restult_fs = test_ctgan_first(df, label_col, N_EXEC, MODEL_NAME, rcorr=True, feat_sel_type=None, art_str=0.3, savefile=\"4_1.pkl\")\n",
    "result_df = cs.add_results_df(result_df, restult_fs, \"CTGAN 0.3\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cs.plot_results(result_df, y_lim=[0.6, 0.95])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.12 ('rai')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "5215fd1cce9b64233b490e6c4e868a314fa8a5a2b064fe0583fd0c29542af034"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
