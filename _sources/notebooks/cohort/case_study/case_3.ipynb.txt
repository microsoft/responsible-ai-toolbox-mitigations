{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cohort Case Study 3\n",
    "\n",
    "This notebook will follow a similar approach to what was done in the notebook [Cohort Case Study 2](./case_2.ipynb).\n",
    "\n",
    "We'll start by downloading the dataset and reading the train and test sets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>department</th>\n",
       "      <th>region</th>\n",
       "      <th>education</th>\n",
       "      <th>gender</th>\n",
       "      <th>recruitment_channel</th>\n",
       "      <th>no_of_trainings</th>\n",
       "      <th>age</th>\n",
       "      <th>previous_year_rating</th>\n",
       "      <th>length_of_service</th>\n",
       "      <th>KPIs_met &gt;80%</th>\n",
       "      <th>awards_won?</th>\n",
       "      <th>avg_training_score</th>\n",
       "      <th>is_promoted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_7</td>\n",
       "      <td>Master's &amp; above</td>\n",
       "      <td>f</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Operations</td>\n",
       "      <td>region_22</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_19</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_23</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>2</td>\n",
       "      <td>39</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Technology</td>\n",
       "      <td>region_26</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54803</th>\n",
       "      <td>Technology</td>\n",
       "      <td>region_14</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>48</td>\n",
       "      <td>3.0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>78</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54804</th>\n",
       "      <td>Operations</td>\n",
       "      <td>region_27</td>\n",
       "      <td>Master's &amp; above</td>\n",
       "      <td>f</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54805</th>\n",
       "      <td>Analytics</td>\n",
       "      <td>region_1</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54806</th>\n",
       "      <td>Sales &amp; Marketing</td>\n",
       "      <td>region_9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>m</td>\n",
       "      <td>sourcing</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54807</th>\n",
       "      <td>HR</td>\n",
       "      <td>region_22</td>\n",
       "      <td>Bachelor's</td>\n",
       "      <td>m</td>\n",
       "      <td>other</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>54808 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              department     region         education gender  \\\n",
       "0      Sales & Marketing   region_7  Master's & above      f   \n",
       "1             Operations  region_22        Bachelor's      m   \n",
       "2      Sales & Marketing  region_19        Bachelor's      m   \n",
       "3      Sales & Marketing  region_23        Bachelor's      m   \n",
       "4             Technology  region_26        Bachelor's      m   \n",
       "...                  ...        ...               ...    ...   \n",
       "54803         Technology  region_14        Bachelor's      m   \n",
       "54804         Operations  region_27  Master's & above      f   \n",
       "54805          Analytics   region_1        Bachelor's      m   \n",
       "54806  Sales & Marketing   region_9               NaN      m   \n",
       "54807                 HR  region_22        Bachelor's      m   \n",
       "\n",
       "      recruitment_channel  no_of_trainings  age  previous_year_rating  \\\n",
       "0                sourcing                1   35                   5.0   \n",
       "1                   other                1   30                   5.0   \n",
       "2                sourcing                1   34                   3.0   \n",
       "3                   other                2   39                   1.0   \n",
       "4                   other                1   45                   3.0   \n",
       "...                   ...              ...  ...                   ...   \n",
       "54803            sourcing                1   48                   3.0   \n",
       "54804               other                1   37                   2.0   \n",
       "54805               other                1   27                   5.0   \n",
       "54806            sourcing                1   29                   1.0   \n",
       "54807               other                1   27                   1.0   \n",
       "\n",
       "       length_of_service  KPIs_met >80%  awards_won?  avg_training_score  \\\n",
       "0                      8              1            0                  49   \n",
       "1                      4              0            0                  60   \n",
       "2                      7              0            0                  50   \n",
       "3                     10              0            0                  50   \n",
       "4                      2              0            0                  73   \n",
       "...                  ...            ...          ...                 ...   \n",
       "54803                 17              0            0                  78   \n",
       "54804                  6              0            0                  56   \n",
       "54805                  3              1            0                  79   \n",
       "54806                  2              0            0                  45   \n",
       "54807                  5              0            0                  49   \n",
       "\n",
       "       is_promoted  \n",
       "0                0  \n",
       "1                0  \n",
       "2                0  \n",
       "3                0  \n",
       "4                0  \n",
       "...            ...  \n",
       "54803            0  \n",
       "54804            0  \n",
       "54805            0  \n",
       "54806            0  \n",
       "54807            0  \n",
       "\n",
       "[54808 rows x 13 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import sys\n",
    "sys.path.append('../../../notebooks')\n",
    "import random\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import xgboost as xgb\n",
    "from sklearn.pipeline import Pipeline\n",
    "from lightgbm import LGBMClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "import matplotlib.pyplot as plt\n",
    "import uci_dataset as database\n",
    "\n",
    "from raimitigations.utils import split_data\n",
    "import raimitigations.dataprocessing as dp\n",
    "from raimitigations.cohort import (\n",
    "    CohortDefinition,\n",
    "    CohortManager,\n",
    "    fetch_cohort_results\n",
    ")\n",
    "from download import download_datasets\n",
    "\n",
    "SEED = 42\n",
    "#SEED = None\n",
    "\n",
    "np.random.seed(SEED)\n",
    "random.seed(SEED)\n",
    "\n",
    "data_dir = '../../../datasets/'\n",
    "download_datasets(data_dir)\n",
    "df =  pd.read_csv(data_dir + 'hr_promotion/train.csv')\n",
    "df.drop(columns=['employee_id'], inplace=True)\n",
    "label_col = 'is_promoted'\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "department              False\n",
       "region                  False\n",
       "education                True\n",
       "gender                  False\n",
       "recruitment_channel     False\n",
       "no_of_trainings         False\n",
       "age                     False\n",
       "previous_year_rating     True\n",
       "length_of_service       False\n",
       "KPIs_met >80%           False\n",
       "awards_won?             False\n",
       "avg_training_score      False\n",
       "is_promoted             False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(38365, 12)\n",
      "(16443, 12)\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, y_train, y_test = split_data(df, label_col, test_size=0.3)\n",
    "print(X_train.shape)\n",
    "print(X_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Once again, we'll be using the same estimator for all of our experiments, since our goal here is to compare different approaches to cohort processing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_model():\n",
    "    model = LGBMClassifier(random_state=SEED)\n",
    "    #model = LogisticRegression()\n",
    "    return model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Initial analysis of multiple cohort definitions\n",
    "\n",
    "Now that we have our dataset, we can create a simple pipeline and fit it using the training data. We'll then use the ``fetch_cohort_results`` function to show the results obtained for the entire dataset, as well as for different cohorts. Notice that this function computes all metrics for each cohort separately, and therefore, different thresholds might be encountered for each cohort (the optimal threshold of a given set of predictions is found using the ROC curve).\n",
    "\n",
    "<a id='baseline1'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "#EXPERIMENT: Baseline 1\n",
    "\n",
    "pipe = Pipeline([\n",
    "    (\"imputer\", dp.BasicImputer(verbose=False)),\n",
    "    (\"scaler\", dp.DataStandardScaler(verbose=False)),\n",
    "    (\"endcoder\", dp.EncoderOHE(verbose=False)),\n",
    "    (\"estimator\", get_model())\n",
    "])\n",
    "pipe.fit(X_train, y_train)\n",
    "pred = pipe.predict_proba(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our first analysis will focus on the cohorts defined by the ``department`` feature."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cohort</th>\n",
       "      <th>cht_query</th>\n",
       "      <th>roc</th>\n",
       "      <th>precision</th>\n",
       "      <th>recall</th>\n",
       "      <th>f1</th>\n",
       "      <th>accuracy</th>\n",
       "      <th>threshold</th>\n",
       "      <th>cht_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>all</td>\n",
       "      <td>all</td>\n",
       "      <td>0.906538</td>\n",
       "      <td>0.621886</td>\n",
       "      <td>0.806852</td>\n",
       "      <td>0.635748</td>\n",
       "      <td>0.788238</td>\n",
       "      <td>0.111382</td>\n",
       "      <td>16443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>cohort_0</td>\n",
       "      <td>(`department` == \"Analytics\")</td>\n",
       "      <td>0.776998</td>\n",
       "      <td>0.578288</td>\n",
       "      <td>0.680165</td>\n",
       "      <td>0.576152</td>\n",
       "      <td>0.741798</td>\n",
       "      <td>0.141988</td>\n",
       "      <td>1646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>cohort_1</td>\n",
       "      <td>(`department` == \"Finance\")</td>\n",
       "      <td>0.928949</td>\n",
       "      <td>0.657223</td>\n",
       "      <td>0.842639</td>\n",
       "      <td>0.689856</td>\n",
       "      <td>0.835958</td>\n",
       "      <td>0.118915</td>\n",
       "      <td>762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>cohort_2</td>\n",
       "      <td>(`department` == \"HR\")</td>\n",
       "      <td>0.915106</td>\n",
       "      <td>0.590844</td>\n",
       "      <td>0.836284</td>\n",
       "      <td>0.589310</td>\n",
       "      <td>0.775538</td>\n",
       "      <td>0.087160</td>\n",
       "      <td>744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cohort_3</td>\n",
       "      <td>(`department` == \"Legal\")</td>\n",
       "      <td>0.900643</td>\n",
       "      <td>0.571520</td>\n",
       "      <td>0.836442</td>\n",
       "      <td>0.551627</td>\n",
       "      <td>0.748466</td>\n",
       "      <td>0.083536</td>\n",
       "      <td>326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>cohort_4</td>\n",
       "      <td>(`department` == \"Operations\")</td>\n",
       "      <td>0.904996</td>\n",
       "      <td>0.616505</td>\n",
       "      <td>0.791970</td>\n",
       "      <td>0.621249</td>\n",
       "      <td>0.761735</td>\n",
       "      <td>0.099676</td>\n",
       "      <td>3366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>cohort_5</td>\n",
       "      <td>(`department` == \"Procurement\")</td>\n",
       "      <td>0.906561</td>\n",
       "      <td>0.639946</td>\n",
       "      <td>0.788949</td>\n",
       "      <td>0.664866</td>\n",
       "      <td>0.815596</td>\n",
       "      <td>0.132125</td>\n",
       "      <td>2180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>cohort_6</td>\n",
       "      <td>(`department` == \"R&amp;D\")</td>\n",
       "      <td>0.813484</td>\n",
       "      <td>0.556883</td>\n",
       "      <td>0.665372</td>\n",
       "      <td>0.566567</td>\n",
       "      <td>0.845679</td>\n",
       "      <td>0.158987</td>\n",
       "      <td>324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>cohort_7</td>\n",
       "      <td>(`department` == \"Sales &amp; Marketing\")</td>\n",
       "      <td>0.941234</td>\n",
       "      <td>0.643102</td>\n",
       "      <td>0.840060</td>\n",
       "      <td>0.678709</td>\n",
       "      <td>0.853988</td>\n",
       "      <td>0.132790</td>\n",
       "      <td>5027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>cohort_8</td>\n",
       "      <td>(`department` == \"Technology\")</td>\n",
       "      <td>0.888814</td>\n",
       "      <td>0.658265</td>\n",
       "      <td>0.771988</td>\n",
       "      <td>0.685713</td>\n",
       "      <td>0.826886</td>\n",
       "      <td>0.176120</td>\n",
       "      <td>2068</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     cohort                              cht_query       roc  precision  \\\n",
       "0       all                                    all  0.906538   0.621886   \n",
       "1  cohort_0          (`department` == \"Analytics\")  0.776998   0.578288   \n",
       "2  cohort_1            (`department` == \"Finance\")  0.928949   0.657223   \n",
       "3  cohort_2                 (`department` == \"HR\")  0.915106   0.590844   \n",
       "4  cohort_3              (`department` == \"Legal\")  0.900643   0.571520   \n",
       "5  cohort_4         (`department` == \"Operations\")  0.904996   0.616505   \n",
       "6  cohort_5        (`department` == \"Procurement\")  0.906561   0.639946   \n",
       "7  cohort_6                (`department` == \"R&D\")  0.813484   0.556883   \n",
       "8  cohort_7  (`department` == \"Sales & Marketing\")  0.941234   0.643102   \n",
       "9  cohort_8         (`department` == \"Technology\")  0.888814   0.658265   \n",
       "\n",
       "     recall        f1  accuracy  threshold  cht_size  \n",
       "0  0.806852  0.635748  0.788238   0.111382     16443  \n",
       "1  0.680165  0.576152  0.741798   0.141988      1646  \n",
       "2  0.842639  0.689856  0.835958   0.118915       762  \n",
       "3  0.836284  0.589310  0.775538   0.087160       744  \n",
       "4  0.836442  0.551627  0.748466   0.083536       326  \n",
       "5  0.791970  0.621249  0.761735   0.099676      3366  \n",
       "6  0.788949  0.664866  0.815596   0.132125      2180  \n",
       "7  0.665372  0.566567  0.845679   0.158987       324  \n",
       "8  0.840060  0.678709  0.853988   0.132790      5027  \n",
       "9  0.771988  0.685713  0.826886   0.176120      2068  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred_train = pipe.predict_proba(X_train)\n",
    "_, th_dict = fetch_cohort_results(X_train, y_train, pred_train, cohort_col=[\"department\"], return_th_dict=True)\n",
    "fetch_cohort_results(X_test, y_test, pred, cohort_col=[\"department\"], fixed_th=th_dict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's now check the results for the cohorts defined by the ``education`` feature."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cohort</th>\n",
       "      <th>cht_query</th>\n",
       "      <th>roc</th>\n",
       "      <th>precision</th>\n",
       "      <th>recall</th>\n",
       "      <th>f1</th>\n",
       "      <th>accuracy</th>\n",
       "      <th>threshold</th>\n",
       "      <th>cht_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>all</td>\n",
       "      <td>all</td>\n",
       "      <td>0.906538</td>\n",
       "      <td>0.621886</td>\n",
       "      <td>0.806852</td>\n",
       "      <td>0.635748</td>\n",
       "      <td>0.788238</td>\n",
       "      <td>0.111382</td>\n",
       "      <td>16443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>cohort_0</td>\n",
       "      <td>(`education` == \"Bachelor's\")</td>\n",
       "      <td>0.901324</td>\n",
       "      <td>0.615260</td>\n",
       "      <td>0.794942</td>\n",
       "      <td>0.629060</td>\n",
       "      <td>0.791273</td>\n",
       "      <td>0.111382</td>\n",
       "      <td>10909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>cohort_1</td>\n",
       "      <td>(`education` == \"Below Secondary\")</td>\n",
       "      <td>0.880221</td>\n",
       "      <td>0.629514</td>\n",
       "      <td>0.805487</td>\n",
       "      <td>0.647113</td>\n",
       "      <td>0.795082</td>\n",
       "      <td>0.110401</td>\n",
       "      <td>244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>cohort_2</td>\n",
       "      <td>(`education` == \"Master's &amp; above\")</td>\n",
       "      <td>0.911406</td>\n",
       "      <td>0.644196</td>\n",
       "      <td>0.802767</td>\n",
       "      <td>0.667880</td>\n",
       "      <td>0.808548</td>\n",
       "      <td>0.131799</td>\n",
       "      <td>4539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cohort_3</td>\n",
       "      <td>(`education`.isnull())</td>\n",
       "      <td>0.947114</td>\n",
       "      <td>0.634414</td>\n",
       "      <td>0.823119</td>\n",
       "      <td>0.674122</td>\n",
       "      <td>0.882823</td>\n",
       "      <td>0.133010</td>\n",
       "      <td>751</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     cohort                            cht_query       roc  precision  \\\n",
       "0       all                                  all  0.906538   0.621886   \n",
       "1  cohort_0        (`education` == \"Bachelor's\")  0.901324   0.615260   \n",
       "2  cohort_1   (`education` == \"Below Secondary\")  0.880221   0.629514   \n",
       "3  cohort_2  (`education` == \"Master's & above\")  0.911406   0.644196   \n",
       "4  cohort_3               (`education`.isnull())  0.947114   0.634414   \n",
       "\n",
       "     recall        f1  accuracy  threshold  cht_size  \n",
       "0  0.806852  0.635748  0.788238   0.111382     16443  \n",
       "1  0.794942  0.629060  0.791273   0.111382     10909  \n",
       "2  0.805487  0.647113  0.795082   0.110401       244  \n",
       "3  0.802767  0.667880  0.808548   0.131799      4539  \n",
       "4  0.823119  0.674122  0.882823   0.133010       751  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "_, th_dict = fetch_cohort_results(X_train, y_train, pred_train, cohort_col=[\"education\"], return_th_dict=True)\n",
    "fetch_cohort_results(X_test, y_test, pred, cohort_col=[\"education\"], fixed_th=th_dict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's now check the results for the cohorts defined by the ``gender`` feature."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cohort</th>\n",
       "      <th>cht_query</th>\n",
       "      <th>roc</th>\n",
       "      <th>precision</th>\n",
       "      <th>recall</th>\n",
       "      <th>f1</th>\n",
       "      <th>accuracy</th>\n",
       "      <th>threshold</th>\n",
       "      <th>cht_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>all</td>\n",
       "      <td>all</td>\n",
       "      <td>0.906538</td>\n",
       "      <td>0.621886</td>\n",
       "      <td>0.806852</td>\n",
       "      <td>0.635748</td>\n",
       "      <td>0.788238</td>\n",
       "      <td>0.111382</td>\n",
       "      <td>16443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>cohort_0</td>\n",
       "      <td>(`gender` == \"f\")</td>\n",
       "      <td>0.901428</td>\n",
       "      <td>0.621032</td>\n",
       "      <td>0.803937</td>\n",
       "      <td>0.622139</td>\n",
       "      <td>0.751782</td>\n",
       "      <td>0.102872</td>\n",
       "      <td>4770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>cohort_1</td>\n",
       "      <td>(`gender` == \"m\")</td>\n",
       "      <td>0.908411</td>\n",
       "      <td>0.619794</td>\n",
       "      <td>0.808885</td>\n",
       "      <td>0.634991</td>\n",
       "      <td>0.794312</td>\n",
       "      <td>0.111398</td>\n",
       "      <td>11673</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     cohort          cht_query       roc  precision    recall        f1  \\\n",
       "0       all                all  0.906538   0.621886  0.806852  0.635748   \n",
       "1  cohort_0  (`gender` == \"f\")  0.901428   0.621032  0.803937  0.622139   \n",
       "2  cohort_1  (`gender` == \"m\")  0.908411   0.619794  0.808885  0.634991   \n",
       "\n",
       "   accuracy  threshold  cht_size  \n",
       "0  0.788238   0.111382     16443  \n",
       "1  0.751782   0.102872      4770  \n",
       "2  0.794312   0.111398     11673  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "_, th_dict = fetch_cohort_results(X_train, y_train, pred_train, cohort_col=[\"gender\"], return_th_dict=True)\n",
    "fetch_cohort_results(X_test, y_test, pred, cohort_col=[\"gender\"], fixed_th=th_dict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, let's check the results for the cohorts defined by the ``recruitment_channel`` feature."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cohort</th>\n",
       "      <th>cht_query</th>\n",
       "      <th>roc</th>\n",
       "      <th>precision</th>\n",
       "      <th>recall</th>\n",
       "      <th>f1</th>\n",
       "      <th>accuracy</th>\n",
       "      <th>threshold</th>\n",
       "      <th>cht_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>all</td>\n",
       "      <td>all</td>\n",
       "      <td>0.906538</td>\n",
       "      <td>0.621886</td>\n",
       "      <td>0.806852</td>\n",
       "      <td>0.635748</td>\n",
       "      <td>0.788238</td>\n",
       "      <td>0.111382</td>\n",
       "      <td>16443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>cohort_0</td>\n",
       "      <td>(`recruitment_channel` == \"other\")</td>\n",
       "      <td>0.904970</td>\n",
       "      <td>0.627684</td>\n",
       "      <td>0.797138</td>\n",
       "      <td>0.649783</td>\n",
       "      <td>0.811548</td>\n",
       "      <td>0.120166</td>\n",
       "      <td>9127</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>cohort_1</td>\n",
       "      <td>(`recruitment_channel` == \"referred\")</td>\n",
       "      <td>0.877682</td>\n",
       "      <td>0.604750</td>\n",
       "      <td>0.765023</td>\n",
       "      <td>0.547651</td>\n",
       "      <td>0.626582</td>\n",
       "      <td>0.120019</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>cohort_2</td>\n",
       "      <td>(`recruitment_channel` == \"sourcing\")</td>\n",
       "      <td>0.910529</td>\n",
       "      <td>0.624562</td>\n",
       "      <td>0.812469</td>\n",
       "      <td>0.640121</td>\n",
       "      <td>0.792571</td>\n",
       "      <td>0.111398</td>\n",
       "      <td>7000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     cohort                              cht_query       roc  precision  \\\n",
       "0       all                                    all  0.906538   0.621886   \n",
       "1  cohort_0     (`recruitment_channel` == \"other\")  0.904970   0.627684   \n",
       "2  cohort_1  (`recruitment_channel` == \"referred\")  0.877682   0.604750   \n",
       "3  cohort_2  (`recruitment_channel` == \"sourcing\")  0.910529   0.624562   \n",
       "\n",
       "     recall        f1  accuracy  threshold  cht_size  \n",
       "0  0.806852  0.635748  0.788238   0.111382     16443  \n",
       "1  0.797138  0.649783  0.811548   0.120166      9127  \n",
       "2  0.765023  0.547651  0.626582   0.120019       316  \n",
       "3  0.812469  0.640121  0.792571   0.111398      7000  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "_, th_dict = fetch_cohort_results(X_train, y_train, pred_train, cohort_col=[\"recruitment_channel\"], return_th_dict=True)\n",
    "fetch_cohort_results(X_test, y_test, pred, cohort_col=[\"recruitment_channel\"], fixed_th=th_dict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Analyzing the results, we can see that many of the cohort definitions result in cohorts with relatively similar metrics, with the exception of the ``department`` column. Therefore, for the rest of this notebook, we'll make an in-depth analysis of how we can improve the performance metrics for the cohorts defined by the ``department`` column.\n",
    "\n",
    "## A Closer Look at the \"department\" cohorts\n",
    "\n",
    "In this section, we'll take a closer look at how we can try to improve the results for the cohorts defined by the ``department`` column. As we've shown, this set of cohorts does present some considerably different metrics between different cohorts. Here we'll try using different cohort definitions, and data rebalancing to improve the performance over a set of cohorts.\n",
    "\n",
    "Before starting the analysis, we'll create a function for plotting the label distribution over different cohorts. This will be useful when we start looking at data imbalance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "def plot_value_counts_cohort(y_full, subsets, normalize = True):\n",
    "    plt.figure().clear()\n",
    "    plt.close()\n",
    "    plt.cla()\n",
    "    plt.clf()\n",
    "    fig = plt.gcf()\n",
    "    fig.set_size_inches(18, 10)\n",
    "    sns.set_theme(style=\"whitegrid\")\n",
    "    if normalize:\n",
    "        plt.ylim(0, 1)\n",
    "    #plt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0, fontsize=23)\n",
    "\n",
    "    value_count = y_full.value_counts(normalize=normalize)\n",
    "\n",
    "    subsets_col = ['full df', 'full df']\n",
    "    counts_col = [value_count[0], value_count[1]]\n",
    "    label_col = [0, 1]\n",
    "\n",
    "    for key in subsets.keys():\n",
    "        value_count = subsets[key][\"y\"].value_counts(normalize=normalize)\n",
    "        subsets_col += [key, key]\n",
    "        counts_col += [value_count[0], value_count[1]]\n",
    "        label_col += [0, 1]\n",
    "\n",
    "    count_df = pd.DataFrame({\"subsets\":subsets_col, \"label\":label_col, \"counts\":counts_col})\n",
    "    \n",
    "    y_label = \"Occurrences\"\n",
    "    if normalize:\n",
    "        y_label = \"Fraction\"\n",
    "\n",
    "    ax = sns.barplot(x=\"subsets\", y=\"counts\", hue=\"label\", data=count_df)\n",
    "    ax.set_xlabel(\"Subsets\", fontsize=30)\n",
    "    ax.set_ylabel(y_label, fontsize=30)\n",
    "    #ax.tick_params(labelsize=15)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cohort-based pipeline for the ``department`` column\n",
    "\n",
    "As we've done in other examples from other ``Cohort Case Study`` notebooks, we'll create a cohort-based pipeline using the ``department`` column as the cohort definition.\n",
    "\n",
    "<a id='cohort1'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/mmendonca/ResponsibleAI/code/git/responsible-ai-mitigations/raimitigations/utils/metric_utils.py:189: RuntimeWarning: invalid value encountered in true_divide\n",
      "  fscore = (2 * precision * recall) / (precision + recall)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cohort</th>\n",
       "      <th>cht_query</th>\n",
       "      <th>roc</th>\n",
       "      <th>precision</th>\n",
       "      <th>recall</th>\n",
       "      <th>f1</th>\n",
       "      <th>accuracy</th>\n",
       "      <th>threshold</th>\n",
       "      <th>cht_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>all</td>\n",
       "      <td>all</td>\n",
       "      <td>0.896297</td>\n",
       "      <td>0.654764</td>\n",
       "      <td>0.748016</td>\n",
       "      <td>0.684303</td>\n",
       "      <td>0.870826</td>\n",
       "      <td>0.160967</td>\n",
       "      <td>16443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>cohort_0</td>\n",
       "      <td>(`department` == \"Analytics\")</td>\n",
       "      <td>0.739505</td>\n",
       "      <td>0.611656</td>\n",
       "      <td>0.626435</td>\n",
       "      <td>0.618234</td>\n",
       "      <td>0.857837</td>\n",
       "      <td>0.220229</td>\n",
       "      <td>1646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>cohort_1</td>\n",
       "      <td>(`department` == \"Finance\")</td>\n",
       "      <td>0.914678</td>\n",
       "      <td>0.848933</td>\n",
       "      <td>0.766767</td>\n",
       "      <td>0.800959</td>\n",
       "      <td>0.943570</td>\n",
       "      <td>0.480133</td>\n",
       "      <td>762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>cohort_2</td>\n",
       "      <td>(`department` == \"HR\")</td>\n",
       "      <td>0.896995</td>\n",
       "      <td>0.829796</td>\n",
       "      <td>0.685490</td>\n",
       "      <td>0.734559</td>\n",
       "      <td>0.955645</td>\n",
       "      <td>0.588032</td>\n",
       "      <td>744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cohort_3</td>\n",
       "      <td>(`department` == \"Legal\")</td>\n",
       "      <td>0.918971</td>\n",
       "      <td>0.819138</td>\n",
       "      <td>0.695177</td>\n",
       "      <td>0.740446</td>\n",
       "      <td>0.963190</td>\n",
       "      <td>0.691379</td>\n",
       "      <td>326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>cohort_4</td>\n",
       "      <td>(`department` == \"Operations\")</td>\n",
       "      <td>0.895444</td>\n",
       "      <td>0.662804</td>\n",
       "      <td>0.755522</td>\n",
       "      <td>0.692435</td>\n",
       "      <td>0.866607</td>\n",
       "      <td>0.158296</td>\n",
       "      <td>3366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>cohort_5</td>\n",
       "      <td>(`department` == \"Procurement\")</td>\n",
       "      <td>0.902884</td>\n",
       "      <td>0.685450</td>\n",
       "      <td>0.732900</td>\n",
       "      <td>0.705026</td>\n",
       "      <td>0.884404</td>\n",
       "      <td>0.203897</td>\n",
       "      <td>2180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>cohort_6</td>\n",
       "      <td>(`department` == \"R&amp;D\")</td>\n",
       "      <td>0.688026</td>\n",
       "      <td>0.578056</td>\n",
       "      <td>0.526861</td>\n",
       "      <td>0.535669</td>\n",
       "      <td>0.944444</td>\n",
       "      <td>0.661615</td>\n",
       "      <td>324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>cohort_7</td>\n",
       "      <td>(`department` == \"Sales &amp; Marketing\")</td>\n",
       "      <td>0.937158</td>\n",
       "      <td>0.659160</td>\n",
       "      <td>0.787313</td>\n",
       "      <td>0.696528</td>\n",
       "      <td>0.887806</td>\n",
       "      <td>0.156050</td>\n",
       "      <td>5027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>cohort_8</td>\n",
       "      <td>(`department` == \"Technology\")</td>\n",
       "      <td>0.874313</td>\n",
       "      <td>0.655917</td>\n",
       "      <td>0.732302</td>\n",
       "      <td>0.680105</td>\n",
       "      <td>0.840426</td>\n",
       "      <td>0.197238</td>\n",
       "      <td>2068</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     cohort                              cht_query       roc  precision  \\\n",
       "0       all                                    all  0.896297   0.654764   \n",
       "1  cohort_0          (`department` == \"Analytics\")  0.739505   0.611656   \n",
       "2  cohort_1            (`department` == \"Finance\")  0.914678   0.848933   \n",
       "3  cohort_2                 (`department` == \"HR\")  0.896995   0.829796   \n",
       "4  cohort_3              (`department` == \"Legal\")  0.918971   0.819138   \n",
       "5  cohort_4         (`department` == \"Operations\")  0.895444   0.662804   \n",
       "6  cohort_5        (`department` == \"Procurement\")  0.902884   0.685450   \n",
       "7  cohort_6                (`department` == \"R&D\")  0.688026   0.578056   \n",
       "8  cohort_7  (`department` == \"Sales & Marketing\")  0.937158   0.659160   \n",
       "9  cohort_8         (`department` == \"Technology\")  0.874313   0.655917   \n",
       "\n",
       "     recall        f1  accuracy  threshold  cht_size  \n",
       "0  0.748016  0.684303  0.870826   0.160967     16443  \n",
       "1  0.626435  0.618234  0.857837   0.220229      1646  \n",
       "2  0.766767  0.800959  0.943570   0.480133       762  \n",
       "3  0.685490  0.734559  0.955645   0.588032       744  \n",
       "4  0.695177  0.740446  0.963190   0.691379       326  \n",
       "5  0.755522  0.692435  0.866607   0.158296      3366  \n",
       "6  0.732900  0.705026  0.884404   0.203897      2180  \n",
       "7  0.526861  0.535669  0.944444   0.661615       324  \n",
       "8  0.787313  0.696528  0.887806   0.156050      5027  \n",
       "9  0.732302  0.680105  0.840426   0.197238      2068  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#EXPERIMENT: Cohort 1\n",
    "\n",
    "cht_manager = CohortManager(\n",
    "    transform_pipe=[\n",
    "        dp.BasicImputer(verbose=False),\n",
    "        dp.DataStandardScaler(verbose=False),\n",
    "        dp.EncoderOHE(drop=False, unknown_err=False, verbose=False),\n",
    "        get_model()\n",
    "    ],\n",
    "    cohort_col=[\"department\"]\n",
    ")\n",
    "cht_manager.fit(X_train, y_train)\n",
    "pred_cht = cht_manager.predict_proba(X_test)\n",
    "\n",
    "pred_train = cht_manager.predict_proba(X_train)\n",
    "metrics_train, th_dict = fetch_cohort_results(X_train, y_train, pred_train, cohort_col=[\"department\"], return_th_dict=True)\n",
    "fetch_cohort_results(X_test, y_test, pred_cht, cohort_col=[\"department\"], fixed_th=th_dict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the previous results, we can see that using the cohort-based pipeline for the ``department`` column, we can considerably improve the results for each cohort when compared to the single pipeline."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.13 ('raipub')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "98cf402749abf383affb54f23cdde06b52ae2a6e4394659b91d1cafca4224ff4"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
